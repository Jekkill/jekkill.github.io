{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/list-element/list-element.component.ts","./src/app/list-element/list-element.component.html","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/node/node.component.ts","./src/app/node/node.component.html","./src/app/services/tree.service.ts","./src/app/tree/tree.component.ts","./src/app/tree/tree.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAS3C,MAAM,YAAY;IAIvB,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC/B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IAChE,CAAC;;wEAVU,YAAY;4FAAZ,YAAY;QCTzB,yEACE;QAAA,sEAAsB;QACxB,4DAAM;QACN,yEACE;QAAA,sEAAsB;QACxB,4DAAM;;6FDIO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEc;AAEC;AACT;AACO;AACA;AACA;AACyB;AACF;;AAmBtE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,oEAAa;SACd;mIAIU,SAAS,mBAflB,2DAAY;QACZ,kEAAa;QACb,kEAAa;QACb,kEAAa;QACb,yFAAoB,aAGpB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,oEAAa;6FAKJ,SAAS;cAjBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kEAAa;oBACb,kEAAa;oBACb,kEAAa;oBACb,yFAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,oEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAyD;;;;ICCrD,sEACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,gGACJ;;;IAEI,qEACI;IAAA,iFAA2D;IAC/D,4DAAK;;;IADiB,0DAAoB;IAApB,gFAAoB;;ADE3C,MAAM,oBAAoB;IAG/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFANU,oBAAoB;oGAApB,oBAAoB;QCRjC,sEACI;QAAA,gHACI;QAEJ,qEACI;QAAA,8GACI;QAER,4DAAK;QACT,4DAAM;;QARG,0DAAwB;QAAxB,sFAAwB;QAIrB,0DAAyC;QAAzC,yFAAyC;qIDGxC,oBAAoB;6FAApB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAEE,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICC9C,wEACI;IAAA,iFACkD;IACtD,4DAAK;;;IADG,0DAA0B;IAA1B,sFAA0B;;ADM/B,MAAM,aAAa;IAIxB,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;IAC/D,CAAC;;0EAVU,aAAa;6FAAb,aAAa;QCT1B,qEACI;QAAA,uGACI;QAGR,4DAAK;;QAJG,0DAAmC;QAAnC,6EAAmC;;6FDQ9B,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;ICCrD,4EAII;IAHA,mUAAoC;IAGpC,2EAAU;IAAA,uDAAiD;IAAA,4DAAW;IAC1E,4DAAS;;;IADK,0DAAiD;IAAjD,oHAAiD;;;IAO3D,yEAE+B;;;IAD3B,6EAAiB;;;IAFzB,sEACI;IAAA,yHAEoB;IACxB,4DAAM;;;IADE,0DAAe;IAAf,gFAAe;;ADLpB,MAAM,aAAa;IAMxB,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAHlC,YAAO,GAAG,KAAK,CAAC;IAIZ,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACrC,CAAC;IAED,wBAAwB;QACtB,6CAA6C;QAC7C,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC/B,CAAC;IAED,kBAAkB;QAChB,mDAAmD;QACnD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC3C,CAAC;;0EAtBU,aAAa;6FAAb,aAAa;QCT1B,yEACI;QAAA,+GAII;QAEJ,2EAGA;QADO,sIAAU,wBAAoB,IAAC;QAFtC,4DAGA;QAAA,uDACA;QAAA,yGACI;QAIR,4DAAM;;QAbE,0DAAgC;QAAhC,8FAAgC;QAK7B,0DAAyB;QAAzB,sFAAyB;QAEhC,0DACA;QADA,0FACA;QAAK,0DAAsC;QAAtC,sFAAsC;qMDFlC,aAAa;6FAAb,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;kBAGE,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA;AAAA;AAA2C;AACJ;;AAMhC,MAAM,WAAW;IAMtB;QAJQ,gBAAW,GAAG,IAAI,oDAAe,CAAS,EAAE,CAAC,CAAC;QAEtD,UAAK,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAGtC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,eAAe;QACb,IAAI,gBAAwB,CAAC;QAC7B,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAChC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;SAC7D;aAAM;YACL,gBAAgB,GAAG,CAAC;oBAClB,KAAK,EAAE,UAAU;oBACjB,EAAE,EAAE,CAAC;oBACL,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE;wBACR;4BACE,KAAK,EAAE,QAAQ;4BACf,EAAE,EAAE,CAAC;4BACL,QAAQ,EAAE,KAAK;4BACf,QAAQ,EAAE;gCACR;oCACE,KAAK,EAAE,QAAQ;oCACf,EAAE,EAAE,CAAC;oCACL,QAAQ,EAAE,KAAK;oCACf,QAAQ,EAAE,EAAE;iCACb;gCACD;oCACE,KAAK,EAAE,WAAW;oCAClB,EAAE,EAAE,CAAC;oCACL,QAAQ,EAAE,KAAK;oCACf,QAAQ,EAAE,EAAE;iCACb;gCACD;oCACE,KAAK,EAAE,UAAU;oCACjB,EAAE,EAAE,CAAC;oCACL,QAAQ,EAAE,KAAK;oCACf,QAAQ,EAAE,EAAE;iCACb;6BACF;yBACF;wBACD;4BACE,KAAK,EAAE,OAAO;4BACd,EAAE,EAAE,CAAC;4BACL,QAAQ,EAAE,KAAK;4BACf,QAAQ,EAAE;gCACR;oCACE,KAAK,EAAE,QAAQ;oCACf,EAAE,EAAE,CAAC;oCACL,QAAQ,EAAE,KAAK;oCACf,QAAQ,EAAE,EAAE;iCACb;gCACD;oCACE,KAAK,EAAE,QAAQ;oCACf,EAAE,EAAE,CAAC;oCACL,QAAQ,EAAE,KAAK;oCACf,QAAQ,EAAE,EAAE;iCACb;gCACD;oCACE,KAAK,EAAE,SAAS;oCAChB,EAAE,EAAC,CAAC;oCACJ,QAAQ,EAAE,KAAK;oCACf,QAAQ,EAAE,EAAE;iCACb;6BACF;yBACF;qBACF;iBACF,CAAC,CAAC;SACJ;QACD,OAAO,gBAAgB,CAAC;IAC1B,CAAC;;sEA1EU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICClD,yEACI;IAAA,yEACoC;IACxC,4DAAM;;;IADE,0DAAoB;IAApB,gFAAoB;;ADMrB,MAAM,aAAa;IAIxB,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;IAC/D,CAAC;IAED,kCAAkC;QAChC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1D,CAAC;;0EAdU,aAAa;6FAAb,aAAa;QCT1B,4EAAwD;QAAhD,qIAAS,wCAAoC,IAAC;QAAE,wJAAiB;QAAA,4DAAS;QAClF,yGACI;;QADC,0DAAgC;QAAhC,6EAAgC;;6FDQxB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TreeService } from './services/tree.service';\nimport { Node } from './interfaces/node';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  nodes: Node[];\n  \n  constructor(\n    private treeService: TreeService\n  ) {}\n\n  ngOnInit() {\n    this.treeService.nodes.subscribe(nodes => this.nodes = nodes);\n  }\n\n}\n","<div class=\"tree-component component\"> \n  <app-tree> </app-tree>\n</div>\n<div class=\"list-component component\"> \n  <app-list> </app-list>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TreeComponent } from './tree/tree.component';\nimport { ListComponent } from './list/list.component';\nimport { NodeComponent } from './node/node.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListElementComponent } from './list-element/list-element.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TreeComponent,\n    ListComponent,\n    NodeComponent,\n    ListElementComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Node } from '../interfaces/node';\n\n@Component({\n  selector: 'app-list-element',\n  templateUrl: './list-element.component.html',\n  styleUrls: ['./list-element.component.scss']\n})\nexport class ListElementComponent implements OnInit {\n  @Input() element: Node;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div > \n    <div *ngIf=\"element.selected\"> \n        {{ element.value }}\n    </div>\n    <ul>\n        <li *ngFor=\"let children of element.children\"> \n            <app-list-element [element]=\"children\"> </app-list-element>\n        </li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TreeService } from '../services/tree.service';\nimport { Node } from '../interfaces/node';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  list: Node[];\n\n  constructor(\n    private treeService: TreeService\n  ) { }\n\n  ngOnInit(): void {\n    this.treeService.nodes.subscribe(nodes => this.list = nodes);\n  }\n\n}\n","<ul> \n    <li *ngFor=\"let currentElement of list\" class=\"node\">\n        <app-list-element\n            [element]=\"currentElement\"></app-list-element>\n    </li>\n</ul>","import { Component, OnInit, Input } from '@angular/core';\nimport { Node } from '../interfaces/node';\nimport { TreeService } from '../services/tree.service';\n\n@Component({\n  selector: 'app-node',\n  templateUrl: './node.component.html',\n  styleUrls: ['./node.component.scss']\n})\nexport class NodeComponent implements OnInit {\n\n  @Input() node: Node;\n\n  isShown = false;\n\n  constructor(\n    private treeService: TreeService\n  ) { }\n\n  ngOnInit(): void {\n    this.treeService.nodes.subscribe();\n  }\n\n  toggleChildrenComponents(): void {\n    // TODO: also show/ hide all children blocks;\n    this.isShown = !this.isShown;\n  }\n  \n  updateCheckboxNode() {\n    // TODO: also update all states for children nodes;\n    this.node.selected = !this.node.selected;\n  }\n\n\n}\n","<div class=\"tree-node\" > \n    <button\n        (click)=\"toggleChildrenComponents()\"\n        *ngIf=\"node.children.length > 0\"\n        class=\"button-expanded\"> \n        <mat-icon>{{ !isShown ? 'arrow_right': 'arrow_drop_down' }}</mat-icon> \n    </button>\n    <input type=\"checkbox\" \n           [checked]=\"node.selected\" \n           (change)=\"updateCheckboxNode()\" /> \n    {{ node.value }}\n    <div *ngFor=\"let children of node.children\">\n        <app-node \n            [node]=\"children\" \n            *ngIf=\"isShown\"></app-node>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Node } from '../interfaces/node';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeService {\n\n  private nodesSource = new BehaviorSubject<Node[]>([]);\n\n  nodes = this.nodesSource.asObservable();\n\n  constructor() { \n    this.nodesSource.next(this.getDefaultState());\n  }\n\n  getDefaultState (): Node[] {\n    let currentTreeState: Node[];\n    if (localStorage.getItem('tree')) {\n      currentTreeState = JSON.parse(localStorage.getItem('tree'));\n    } else {\n      currentTreeState = [{\n        value: 'Продукты',\n        id: 1,\n        selected: false,\n        children: [\n          {\n            value: 'Фрукты',\n            id: 2,\n            selected: false, \n            children: [\n              {\n                value: 'Яблоки',\n                id: 3,\n                selected: false, \n                children: []\n              },\n              {\n                value: 'Апельсины',\n                id: 4,\n                selected: false, \n                children: []\n              },\n              {\n                value: 'Виноград',\n                id: 5,\n                selected: false, \n                children: []\n              },\n            ]\n          },\n          {\n            value: 'Овощи',\n            id: 6,\n            selected: false, \n            children: [\n              {\n                value: 'Томаты',\n                id: 7,\n                selected: false,\n                children: []\n              },\n              {\n                value: 'Огурцы',\n                id: 8,\n                selected: false,\n                children: []\n              },\n              {\n                value: 'Капуста',\n                id:9,\n                selected: false,\n                children: []\n              }\n            ]\n          }\n        ]\n      }];\n    }\n    return currentTreeState;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Node } from '../interfaces/node';\nimport { TreeService } from '../services/tree.service';\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss']\n})\nexport class TreeComponent implements OnInit {\n  \n  tree: Node[];\n  \n  constructor(\n    private treeService: TreeService\n  ) { }\n\n  ngOnInit() {\n    this.treeService.nodes.subscribe(nodes => this.tree = nodes);\n  }\n\n  saveCurrentTreeStateToLocalStorage() {\n    localStorage.setItem('tree', JSON.stringify(this.tree));\n  }\n\n}\n","<button (click)=\"saveCurrentTreeStateToLocalStorage()\"> Сохранить дерево </button>\n<div *ngFor=\"let currentNode of tree\" class=\"node\">\n    <app-node \n        [node]=\"currentNode\"></app-node>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}