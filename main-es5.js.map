{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/list-element/list-element.component.ts","webpack:///src/app/list-element/list-element.component.html","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/node/node.component.ts","webpack:///src/app/node/node.component.html","webpack:///src/app/services/tree.service.ts","webpack:///src/app/tree/tree.component.ts","webpack:///src/app/tree/tree.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","treeService","nodes","subscribe","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ListElementComponent","ListComponent","list","NodeComponent","isShown","node","selected","updateCheckboxNode","TreeService","nodesSource","asObservable","next","getDefaultState","currentTreeState","localStorage","getItem","JSON","parse","value","children","providedIn","TreeComponent","tree","setItem","stringify","saveCurrentTreeStateToLocalStorage","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TreeService } from './services/tree.service';\nimport { Node } from './interfaces/node';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  nodes: Node[];\n  \n  constructor(\n    private treeService: TreeService\n  ) {}\n\n  ngOnInit() {\n    this.treeService.nodes.subscribe(nodes => this.nodes = nodes);\n  }\n\n}\n","<div class=\"tree-component component\"> \n  <app-tree> </app-tree>\n</div>\n<div class=\"list-component component\"> \n  <app-list> </app-list>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TreeComponent } from './tree/tree.component';\nimport { ListComponent } from './list/list.component';\nimport { NodeComponent } from './node/node.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListElementComponent } from './list-element/list-element.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TreeComponent,\n    ListComponent,\n    NodeComponent,\n    ListElementComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Node } from '../interfaces/node';\n\n@Component({\n  selector: 'app-list-element',\n  templateUrl: './list-element.component.html',\n  styleUrls: ['./list-element.component.scss']\n})\nexport class ListElementComponent implements OnInit {\n  @Input() element: Node;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div > \n    <div *ngIf=\"element.selected\"> \n        {{ element.value }}\n    </div>\n    <ul>\n        <li *ngFor=\"let children of element.children\"> \n            <app-list-element [element]=\"children\"> </app-list-element>\n        </li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TreeService } from '../services/tree.service';\nimport { Node } from '../interfaces/node';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  list: Node[];\n\n  constructor(\n    private treeService: TreeService\n  ) { }\n\n  ngOnInit(): void {\n    this.treeService.nodes.subscribe(nodes => this.list = nodes);\n  }\n\n}\n","<ul> \n    <li *ngFor=\"let currentElement of list\" class=\"node\">\n        <app-list-element\n            [element]=\"currentElement\"></app-list-element>\n    </li>\n</ul>","import { Component, OnInit, Input } from '@angular/core';\nimport { Node } from '../interfaces/node';\nimport { TreeService } from '../services/tree.service';\n\n@Component({\n  selector: 'app-node',\n  templateUrl: './node.component.html',\n  styleUrls: ['./node.component.scss']\n})\nexport class NodeComponent implements OnInit {\n\n  @Input() node: Node;\n\n  isShown = false;\n\n  constructor(\n    private treeService: TreeService\n  ) { }\n\n  ngOnInit(): void {\n    this.treeService.nodes.subscribe();\n  }\n\n  toggleChildrenComponents(): void {\n    // TODO: also show/ hide all children blocks;\n    this.isShown = !this.isShown;\n  }\n  \n  updateCheckboxNode() {\n    // TODO: also update all states for children nodes;\n    this.node.selected = !this.node.selected;\n  }\n\n\n}\n","<div class=\"tree-node\" > \n    <button\n        (click)=\"toggleChildrenComponents()\"\n        *ngIf=\"node.children.length > 0\"\n        class=\"button-expanded\"> \n        <mat-icon>{{ !isShown ? 'arrow_right': 'arrow_drop_down' }}</mat-icon> \n    </button>\n    <input type=\"checkbox\" \n           [checked]=\"node.selected\" \n           (change)=\"updateCheckboxNode()\" /> \n    {{ node.value }}\n    <div *ngFor=\"let children of node.children\">\n        <app-node \n            [node]=\"children\" \n            *ngIf=\"isShown\"></app-node>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Node } from '../interfaces/node';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeService {\n\n  private nodesSource = new BehaviorSubject<Node[]>([]);\n\n  nodes = this.nodesSource.asObservable();\n\n  constructor() { \n    this.nodesSource.next(this.getDefaultState());\n  }\n\n  getDefaultState (): Node[] {\n    let currentTreeState: Node[];\n    if (localStorage.getItem('tree')) {\n      currentTreeState = JSON.parse(localStorage.getItem('tree'));\n    } else {\n      currentTreeState = [{\n        value: 'Продукты',\n        id: 1,\n        selected: false,\n        children: [\n          {\n            value: 'Фрукты',\n            id: 2,\n            selected: false, \n            children: [\n              {\n                value: 'Яблоки',\n                id: 3,\n                selected: false, \n                children: []\n              },\n              {\n                value: 'Апельсины',\n                id: 4,\n                selected: false, \n                children: []\n              },\n              {\n                value: 'Виноград',\n                id: 5,\n                selected: false, \n                children: []\n              },\n            ]\n          },\n          {\n            value: 'Овощи',\n            id: 6,\n            selected: false, \n            children: [\n              {\n                value: 'Томаты',\n                id: 7,\n                selected: false,\n                children: []\n              },\n              {\n                value: 'Огурцы',\n                id: 8,\n                selected: false,\n                children: []\n              },\n              {\n                value: 'Капуста',\n                id:9,\n                selected: false,\n                children: []\n              }\n            ]\n          }\n        ]\n      }];\n    }\n    return currentTreeState;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Node } from '../interfaces/node';\nimport { TreeService } from '../services/tree.service';\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss']\n})\nexport class TreeComponent implements OnInit {\n  \n  tree: Node[];\n  \n  constructor(\n    private treeService: TreeService\n  ) { }\n\n  ngOnInit() {\n    this.treeService.nodes.subscribe(nodes => this.tree = nodes);\n  }\n\n  saveCurrentTreeStateToLocalStorage() {\n    localStorage.setItem('tree', JSON.stringify(this.tree));\n  }\n\n}\n","<button (click)=\"saveCurrentTreeStateToLocalStorage()\"> Сохранить дерево </button>\n<div *ngFor=\"let currentNode of tree\" class=\"node\">\n    <app-node \n        [node]=\"currentNode\"></app-node>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}